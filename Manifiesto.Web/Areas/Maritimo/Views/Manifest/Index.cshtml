@model IEnumerable<Manifiesto.Web.Areas.Maritimo.Models.manifestListViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Manifiestos Maritimos</h2>

<br />

<table class="table table-striped table-bordered table-hover" id="dataTables-example">
 <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.no_viaje)
        </th>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.manifest)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.original)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cuscar)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cuscardt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.function)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.operation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.funcsend)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.test)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.tipo)
        </th>
        <th>
            Import / Export
        </th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {

    <tr>
        <td>       
            @Html.DisplayFor(modelItem => item.id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.no_viaje)
        </td>
        <td>
            @Html.ActionLink("Select", "Edit", new {  id=item.id  })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.manifest)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.original)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.cuscar)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.cuscardt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.function)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.operation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.funcsend)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.test)
        </td>
        <td>
             @Html.DisplayFor(modelItem => item.tipo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.import_export_desc)
        </td>
    </tr>
    
}
</tbody>
</table>

<script>
    $(document).ready(function () {
        $('#dataTables-example').dataTable({
            aaSorting : [[0, 'desc']]
        });
    });
</script>



@*

@(Html.Kendo().Grid<Manifiesto.Web.Areas.Maritimo.Models.manifestListViewModel>()
    .Name("ListMaritimo")
    .Columns(columns =>
    {
        columns.Bound(p => p.id);
        columns.Bound(p => p.no_viaje);
        columns.Bound(p => p.id).Title("Action").Filterable(false).ClientTemplate(
        "<a href='" +
               Url.Action("Edit", "Manifest") +
               "/#= id #'" +
           ">Prev</a>"
        );  
        columns.Bound(p => p.manifest);
        columns.Bound(p => p.original);
        columns.Bound(p => p.cuscar);
        columns.Bound(p => p.cuscardt);
        columns.Bound(p => p.mtype);
        columns.Bound(p => p.mfunction);
        columns.Bound(p => p.operation);
        columns.Bound(p => p.funcsend);
        columns.Bound(p => p.test);
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .Pageable(pageable =>
                        {
                            pageable.Refresh(true);
                            pageable.PageSizes(true);
                        })
    .HtmlAttributes(new { style = "height:640px;" })
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.id);
        })
        .PageSize(20)
                .Read(read => read.Action("getManifest", "Manifest"))   
    )
)

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>


*@